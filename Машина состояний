from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import asyncio
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext


api = ''
bot = Bot(token = api)
dp = Dispatcher(bot, storage=MemoryStorage())

class UserState(StatesGroup):
    age = State()
    growth = State()
    weight = State()



@dp.message_handler(commands= 'calories')
async  def set_age(message):
    await message.answer ("Введите свой возраст:")
    await UserState.age.set()

@dp.message_handler(state = UserState.age)
async  def set_growth(message, state):
    await state.update_data(age = message.text)
    await message.answer("Введите свой рост:")
    await UserState.growth.set()


@dp.message_handler(state = UserState.growth)
async  def set_weight(message, state):
    await state.update_data(growth = message.text)
    await message.answer("Введите свой вес:")
    await UserState.weight.set()


@dp.message_handler()
async def all_messages(message):
    print("All message")
    await message.answer ("Введите команду 'calories', чтобы начать общение.")



if __name__ == "__main__":
    executor.start_polling(dp,skip_updates=True)
